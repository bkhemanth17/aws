#configuring docker -> Setting up docker in the environment
#docker.sh

yum install docker -y
systemctl start docker.service
systemctl status docker.service
docker pull ubuntu
docker images
docker run -it --name container1 ubuntu



#after creating docker container to make containerization more efficient we need to capture iso image of container
#ctrl pq to exit cont1 & docker ps -a to list all containters where as docker ps to list all runing container
#docker stop cont1 -> to stop the running container
#docker start cont1 -> to start the container from stopped state
#docker attach cont1 -> to enter into cont1
#docker inspect cont1 -> to see the configuration details of container
#docker1.sh ---->>  Manually way of taking backup copy of container

docker ps
docker ps -a
docker commit container1 image:v1
docker images
docker run -it --name cont2 image:v1
docker stop container1
docker start container1
docker inspect container1
docker attach cont2


#run it on the docker container
#containersetup.sh

apt update -y
apt install git maven apache2 -y
touch file{1..101}
apt install vim -y
git --version
ls



#Contarizing application using docker
#create a docker file -> automation way
#contdock.sh

FROM		: to get the os for conatiner.
RUN		: to execute linux commands(image creation)
CMD		: to execute linux commands(container creation)
ENTRYPOINT	: high priority than CMD
COPY		: it will copy local files to conatiner.
ADD		: it will copy internet files to conatiner.
WORKDIR		: to go specific foilder inside container
LABEL		: used to attach labels for image
ENV		: to pass env variables inside the container
ARGS		: to pass env variables outside the container
EXPOSE		: used to allocate port number


Vim Docker file

File-1:
FROM ubuntu
RUN apt update -y
RUN apt install git maven apache2 -y
RUN touch file1

File-2:
FROM ubuntu
RUN apt update -y
RUN apt install git maven tree apache2 -y
RUN touch file1
RUN apt install default-jre -y
CMD ["java", "-version"]

File-3: 
FROM ubuntu
COPY index.html /tmp
ADD https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.87/bin/apache-tomcat-9.0.87.tar.gz /tmp




#create image from the Docker file
docker build -t img:v2 .
#create the container from the image(img:v2).
docker run -it --name cont3 img:v2
